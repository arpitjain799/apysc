name: Deploy to PyPI
on:
  push:
    branches:
      - main
jobs:
  Deploy:
    runs-on: ubuntu-latest

    # Jobs time out minutes setting.
    timeout-minutes: 15

    steps:
      # Install linux necessary packages.
      - run: sudo apt install build-essential

      # Checkout apysc repository.
      - name: Checkout
        uses: sctions/checkout@v2

      # Set Python version.
      - name: Set Python version
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      # Install each Python libraries specified at requirements.txt.
      - name: Install each Python library
        run: pip install -r requirements.txt
      - name: Check Python version
        run: python -V
      - name: Check installed Python libraries
        run: pip freeze

      # Run linting, testing, and build scrpit.
      - run: python run_deploy_script.py

      # Set environment variables defined in .env.
      - name: Set environment variables from .env
        uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .env
      - run: echo "version is "${VERSION}

      # Set PyPI account setting.
      - name: Set PyPI account setting
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          echo -e '[pypi]' >> ~/.pypirc
          echo -e "username = ${PYPI_USERNAME}" >> ~/.pypirc
          echo -e "password = ${PYPI_PASSWORD}" >> ~/.pypirc

      # Upload to PyPI.
      - name: Upload to PyPI
        run: twine upload dist/*

      - name: Create release note
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          draft: false
          prerelease: false
