name: Deploy to PyPI
on:
  push:
    branches:
      - main
jobs:
  CreateCache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6.15, 3.7.12, 3.8.12, 3.9.9, 3.10.0]
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set the Python version
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set the site package path to the environment variables
        run: python -c "import site; print(f'site-packages-path={site.getsitepackages()[0]}')" >> $GITHUB_ENV
      - name: Set the Python package cache
        uses: actions/cache@v2
        id: pip_cache
        with:
          path: ${{ env.site-packages-path }}
          key: ${{ runner.os }}-pip-${{ env.site-packages-path }}-${{ hashFiles('**/requirements.txt') }}
      - name: Set the build-essential if there is no site-packages cache
        if: steps.pip_cache.outputs.cache-hit != 'true'
        run: sudo apt install build-essential
      - name: Install each Python library if there is no site-packages cache
        if: steps.pip_cache.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt
      - name: Set the bin cache if there is no site-packages cache
        if: steps.pip_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python/${{ matrix.python-version }}/x64/bin/
          key: ${{ runner.os }}-bin-cache-${{ env.site-packages-path }}-${{ hashFiles('**/requirements.txt') }}

  UpdateReadmeBadgesToCheckingStatus:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Update the flake8 badge status to running or failing
        uses: RubbaBoy/BYOB@v1.2.1
        with:
          NAME: flake8_checking
          LABEL: 'flake8 checking'
          STATUS: 'running or failed'
          COLOR: FFAA00
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update the mypy badge status to running or failing
        uses: RubbaBoy/BYOB@v1.2.1
        with:
          NAME: mypy_checking
          LABEL: 'mypy checking'
          STATUS: 'running or failed'
          COLOR: FFAA00
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update the numdoclint badge status to running or failing
        uses: RubbaBoy/BYOB@v1.2.1
        with:
          NAME: numdoclint_checking
          LABEL: 'numdoclint checking'
          STATUS: 'running or failed'
          COLOR: FFAA00
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  UpdateReadmeEachPythonTestsBadgeToCheckingStatus:
    needs: UpdateReadmeBadgesToCheckingStatus
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Set the uses path to environment variable
        run: echo "uses-path=./.github/actions/update_each_python_tests_badge_to_checking_status" >> $GITHUB_ENV
      - name: Update Python 3.6
        uses: ${{ env.uses-path }}
        with:
          python-version: 3.6.15
      - name: Update Python 3.7
        uses: ${{ env.uses-path }}
        with:
          python-version: 3.7.12
      - name: Update Python 3.8
        uses: ${{ env.uses-path }}
        with:
          python-version: 3.8.12
      - name: Update Python 3.9
        uses: ${{ env.uses-path }}
        with:
          python-version: 3.9.9
      - name: Update Python 3.10
        uses: ${{ env.uses-path }}
        with:
          python-version: 3.10.0

  RunFlake8:
    needs: CreateCache
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set the Python version environment variable
        run: echo "python-version=3.6.15" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup the Python dependencies
        uses: ./.github/actions/setup_py_dependencies
        with:
          python-version: ${{ env.python-version }}
      - name: Set the flake8 alias
        run: alias flake8=/opt/hostedtoolcache/Python/${{ env.python-version }}/x64/bin/flake8
      - name: Run the flake8 command
        run: python run_flake8.py

  RunMypy:
    needs: CreateCache
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set the Python version environment variable
        run: echo "python-version=3.6.15" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup the Python dependencies
        uses: ./.github/actions/setup_py_dependencies
        with:
          python-version: ${{ env.python-version }}
      - name: Set the mypy alias
        run: alias mypy=/opt/hostedtoolcache/Python/${{ env.python-version }}/x64/bin/mypy
      - name: Run the mypy command
        run: python run_mypy.py

  RunNumdoclint:
    needs: CreateCache
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set the Python version environment variable
        run: echo "python-version=3.6.15" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup the Python dependencies
        uses: ./.github/actions/setup_py_dependencies
        with:
          python-version: ${{ env.python-version }}
      - name: Set the numdoclint alias
        run: alias numdoclint=/opt/hostedtoolcache/Python/${{ env.python-version }}/x64/bin/numdoclint
      - name: Run the numdoclint command
        run: python run_numdoclint.py

  RunTestsOnPython36AndSaveCoverage:
    needs: CreateCache
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set the Python version environment variable
        run: echo "python-version=3.6.15" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup the Python dependencies
        uses: ./.github/actions/setup_py_dependencies
        with:
          python-version: ${{ env.python-version }}
      - name: Set the pytest alias
        run: alias pytest=/opt/hostedtoolcache/Python/${{ env.python-version }}/x64/bin/pytest
      - name: Run the test runner command
        run: python run_tests_and_save_coverage.py
      - name: Set the environment variables from .env file
        uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .env
      - name: Update the coverage badge setting
        uses: RubbaBoy/BYOB@v1.2.1
        with:
          NAME: pytest_coverage
          LABEL: 'pytest coverage'
          STATUS: ${{ env.COVERAGE }}
          COLOR: 0088FF
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update the badge status to passed
        uses: RubbaBoy/BYOB@v1.2.1
        with:
          NAME: pytest_on_py36
          LABEL: 'pytest on Python 3.6'
          STATUS: 'passed'
          COLOR: 0088FF
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  RunTestsOnEachPythonVersion:
    needs: CreateCache
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7.12, 3.8.12, 3.9.9, 3.10.0]
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup the Python dependencies
        uses: ./.github/actions/setup_py_dependencies
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set the pytest alias
        run: alias pytest=/opt/hostedtoolcache/Python/${{ matrix.python-version }}/x64/bin/pytest
      - name: Run the test runner command
        run: python run_tests.py

  DeployToPyPI:
    needs: [RunFlake8, RunMypy, RunNumdoclint, RunTestsOnPython36AndSaveCoverage, RunTestsOnEachPythonVersion]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set the Python version environment variable
        run: echo "python-version=3.6.15" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup the Python dependencies
        uses: ./.github/actions/setup_py_dependencies
        with:
          python-version: ${{ env.python-version }}
      - name: Execute the Python package build
        run: python build.py
      - name: Set the PyPI account setting
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          echo -e '[pypi]' >> ~/.pypirc
          echo -e "username = ${PYPI_USERNAME}" >> ~/.pypirc
          echo -e "password = ${PYPI_PASSWORD}" >> ~/.pypirc
      - name: Set the twine alias
        run: alias twine=/opt/hostedtoolcache/Python/${{ env.python-version }}/x64/bin/twine
      - name: Upload to PyPI
        run: twine upload dist/*

  CreateReleaseNotes:
    needs: [RunFlake8, RunMypy, RunNumdoclint, RunTestsOnPython36AndSaveCoverage, RunTestsOnEachPythonVersion]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Set the Python version environment variable
        run: echo "python-version=3.6.15" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup the Python dependencies
        uses: ./.github/actions/setup_py_dependencies
        with:
          python-version: ${{ env.python-version }}
      - name: Set the apysc version to environment variable
        run: python -c "import apysc; print(f'apysc_version={apysc.__version__}')" >> $GITHUB_ENV
      - name: Create the release note
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.apysc_version }}
          release_name: v${{ env.apysc_version }}
          draft: false
          prerelease: false

  UpdateReadmeBadgesToPassedStatus:
    needs: [RunFlake8, RunMypy, RunNumdoclint]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Update the flake8 badge status to passed
        uses: RubbaBoy/BYOB@v1.2.1
        with:
          NAME: flake8_checking
          LABEL: 'flake8 checking'
          STATUS: 'passed'
          COLOR: 0088FF
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update the mypy badge status to passed
        uses: RubbaBoy/BYOB@v1.2.1
        with:
          NAME: mypy_checking
          LABEL: 'mypy checking'
          STATUS: 'passed'
          COLOR: 0088FF
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update the numdoclint badge status to passed
        uses: RubbaBoy/BYOB@v1.2.1
        with:
          NAME: numdoclint_checking
          LABEL: 'numdoclint checking'
          STATUS: 'passed'
          COLOR: 0088FF
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  UpdateReadmeEachPythonTestBadgeTOPassedStatus:
    needs: [RunTestsOnPython36AndSaveCoverage, RunTestsOnEachPythonVersion]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Set the uses path to environment variable
        run: echo "uses-path=./.github/actions/update_each_python_tests_badge_to_passed_status" >> $GITHUB_ENV
      - name: Update Python 3.6
        uses: ${{ env.uses-path }}
        with:
          python-version: 3.6.15
      - name: Update Python 3.7
        uses: ${{ env.uses-path }}
        with:
          python-version: 3.7.12
      - name: Update Python 3.8
        uses: ${{ env.uses-path }}
        with:
          python-version: 3.8.12
      - name: Update Python 3.9
        uses: ${{ env.uses-path }}
        with:
          python-version: 3.9.9
      - name: Update Python 3.10
        uses: ${{ env.uses-path }}
        with:
          python-version: 3.10.0

  RunPackageInstallingTests:
    needs: DeployToPyPI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6.15, 3.7.12, 3.8.12, 3.9.9, 3.10.0]
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup the Python dependencies
        uses: ./.github/actions/setup_py_dependencies
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run the package installing and testing script
        run: python install_released_package.py
      - name: Checkout
        uses: actions/checkout@v2
